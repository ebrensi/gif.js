{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/events/events.js",
    "src/browser.coffee",
    "src/gif.coffee"
  ],
  "names": [],
  "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n",
    "### CoffeeScript version of the browser detection from MooTools ###\n\nua = navigator.userAgent.toLowerCase()\nplatform = navigator.platform.toLowerCase()\nUA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) or [null, 'unknown', 0]\nmode = UA[1] == 'ie' && document.documentMode\n\nbrowser =\n  name: if UA[1] is 'version' then UA[3] else UA[1]\n  version: mode or parseFloat(if UA[1] is 'opera' && UA[4] then UA[4] else UA[2])\n\n  platform:\n    name: if ua.match(/ip(?:ad|od|hone)/) then 'ios' else (ua.match(/(?:webos|android)/) or platform.match(/mac|win|linux/) or ['other'])[0]\n\nbrowser[browser.name] = true\nbrowser[browser.name + parseInt(browser.version, 10)] = true\nbrowser.platform[browser.platform.name] = true\n\nmodule.exports = browser\n",
    "{EventEmitter} = require 'events'\nbrowser = require './browser.coffee'\n\nclass GIF extends EventEmitter\n\n  defaults =\n    workerScript: 'gif.worker.js'\n    workers: 2\n    repeat: 0 # repeat forever, -1 = repeat once\n    background: '#fff'\n    quality: 10 # pixel sample interval, lower is better\n    width: null # size derermined from first frame if possible\n    height: null\n    transparent: null\n    debug: false\n    dither: false # see GIFEncoder.js for dithering options\n\n  frameDefaults =\n    delay: 500 # ms\n    copy: false\n    dispose: -1\n\n  constructor: (options) ->\n    super options\n    @running = false\n\n    @options = {}\n    @frames = []\n\n    @freeWorkers = []\n    @activeWorkers = []\n\n    @setOptions options\n    for key, value of defaults\n      @options[key] ?= value\n\n  setOption: (key, value) ->\n    @options[key] = value\n    if @_canvas? and key in ['width', 'height']\n      @_canvas[key] = value\n\n  setOptions: (options) ->\n    @setOption key, value for own key, value of options\n\n  addFrame: (image, options={}) ->\n    frame = {}\n    frame.transparent = @options.transparent\n    for key of frameDefaults\n      frame[key] = options[key] or frameDefaults[key]\n\n    # use the images width and height for options unless already set\n    @setOption 'width', image.width unless @options.width?\n    @setOption 'height', image.height unless @options.height?\n\n    if ImageData? and image instanceof ImageData\n       frame.data = image.data\n    else if (CanvasRenderingContext2D? and image instanceof CanvasRenderingContext2D) or (WebGLRenderingContext? and image instanceof WebGLRenderingContext)\n      if options.copy\n        frame.data = @getContextData image\n      else\n        frame.context = image\n    else if image.childNodes?\n      if options.copy\n        frame.data = @getImageData image\n      else\n        frame.image = image\n    else\n      throw new Error 'Invalid image'\n\n    @frames.push frame\n\n  render: ->\n    throw new Error 'Already running' if @running\n\n    if not @options.width? or not @options.height?\n      throw new Error 'Width and height must be set prior to rendering'\n\n    @running = true\n    @nextFrame = 0\n    @finishedFrames = 0\n\n    @imageParts = (null for i in [0...@frames.length])\n    numWorkers = @spawnWorkers()\n    # we need to wait for the palette\n    if @options.globalPalette == true\n      @renderNextFrame()\n    else\n      @renderNextFrame() for i in [0...numWorkers]\n\n    @emit 'start'\n    @emit 'progress', 0\n\n  abort: ->\n    loop\n      worker = @activeWorkers.shift()\n      break unless worker?\n      @log 'killing active worker'\n      worker.terminate()\n    @running = false\n    @emit 'abort'\n\n  # private\n\n  spawnWorkers: ->\n    numWorkers = Math.min(@options.workers, @frames.length)\n    [@freeWorkers.length...numWorkers].forEach (i) =>\n      @log \"spawning worker #{ i }\"\n      worker = new Worker @options.workerScript\n      worker.onmessage = (event) =>\n        @activeWorkers.splice @activeWorkers.indexOf(worker), 1\n        @freeWorkers.push worker\n        @frameFinished event.data\n      @freeWorkers.push worker\n    return numWorkers\n\n  frameFinished: (frame) ->\n    @log \"frame #{ frame.index } finished - #{ @activeWorkers.length } active\"\n    @finishedFrames++\n    @emit 'progress', @finishedFrames / @frames.length\n    @imageParts[frame.index] = frame\n    # remember calculated palette, spawn the rest of the workers\n    if @options.globalPalette == true\n      @options.globalPalette = frame.globalPalette\n      @log 'global palette analyzed'\n      @renderNextFrame() for i in [1...@freeWorkers.length] if @frames.length > 2\n    if null in @imageParts\n      @renderNextFrame()\n    else\n      @finishRendering()\n\n  finishRendering: ->\n    len = 0\n    for frame in @imageParts\n      len += (frame.data.length - 1) * frame.pageSize + frame.cursor\n    len += frame.pageSize - frame.cursor\n    @log \"rendering finished - filesize #{ Math.round(len / 1000) }kb\"\n    data = new Uint8Array len\n    offset = 0\n    for frame in @imageParts\n      for page, i in frame.data\n        data.set page, offset\n        if i is frame.data.length - 1\n          offset += frame.cursor\n        else\n          offset += frame.pageSize\n\n    image = new Blob [data],\n      type: 'image/gif'\n\n    @emit 'finished', image, data\n\n  renderNextFrame: ->\n    throw new Error 'No free workers' if @freeWorkers.length is 0\n    return if @nextFrame >= @frames.length # no new frame to render\n\n    frame = @frames[@nextFrame++]\n    worker = @freeWorkers.shift()\n    task = @getTask frame\n\n    @log \"starting frame #{ task.index + 1 } of #{ @frames.length }\"\n    @activeWorkers.push worker\n    worker.postMessage task#, [task.data.buffer]\n\n  getContextData: (ctx) ->\n    return ctx.getImageData(0, 0, @options.width, @options.height).data\n\n  getImageData: (image) ->\n    if not @_canvas?\n      @_canvas = document.createElement 'canvas'\n      @_canvas.width = @options.width\n      @_canvas.height = @options.height\n\n    ctx = @_canvas.getContext '2d'\n    ctx.fillStyle = @options.background\n    ctx.fillRect 0, 0, @options.width, @options.height\n    ctx.drawImage image, 0, 0\n\n    return @getContextData ctx\n\n  getTask: (frame) ->\n    index = @frames.indexOf frame\n    task =\n      index: index\n      last: index is (@frames.length - 1)\n      delay: frame.delay\n      dispose: frame.dispose\n      transparent: frame.transparent\n      width: @options.width\n      height: @options.height\n      quality: @options.quality\n      dither: @options.dither\n      globalPalette: @options.globalPalette\n      repeat: @options.repeat\n      canTransfer: (browser.name is 'chrome')\n\n    if frame.data?\n      task.data = frame.data\n    else if frame.context?\n      task.data = @getContextData frame.context\n    else if frame.image?\n      task.data = @getImageData frame.image\n    else\n      throw new Error 'Invalid frame'\n\n    return task\n\n  log: (args...) ->\n    return unless @options.debug\n    console.log args...\n\n\nmodule.exports = GIF\n"
  ]
}